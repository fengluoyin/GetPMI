{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Sample template to schedule DynamoDB table backup using Lambda- V0.21",
  "Parameters": {
    "BucketName":{
      "Type": "String",
      "Description": "Enter bucket name"
      },
    "FileName":{
      "Type": "String",
      "Description": "Enter file name"
    },
    "Email":{
      "Type": "String",
      "Description": "Enter DynamoDB Table name to enable backup"
    }
  },

  "Resources": {
        "LambdaServiceExecutionRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        },
        "LambdaServiceExecutionRolePolicy":{
           "Type": "AWS::IAM::Policy",
           "Properties": {
              "PolicyName": "GetPMIRolePolicy",
              "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [{
                      "Effect": "Allow",
                      "Action": ["logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents"],
                      "Resource": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:logs:",
                            {"Ref": "AWS::Region"},
                            ":",
                            {"Ref": "AWS::AccountId"},
                            ":",
                            "log-group:",
                            "/aws/lambda/",
                            {"Ref": "GetPMI"},
                            ":*"
                          ]
                        ]
                      }
                  },
                  {
                      "Effect": "Allow",
                        "Action": [
                          "sns:Publish"
                        ],
                      "Resource": "arn:aws:sns:*:*:*"
                  },
                  {
                      "Effect": "Allow",
                      "Action": [ "dynamodb:ListBackups" ],
                      "Resource": "*"
                  }]
              },
              "Roles": [ { "Ref": "LambdaServiceExecutionRole" } ]
           }
        },
        "ScheduledEvent": {
            "Properties": {
                "Description": "CloudWatch event to trigger lambda SG function",
                "ScheduleExpression": "cron(0 16 ? * 2/7 *)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": { "Fn::GetAtt" : ["GetPMI", "Arn"] },
                        "Id": "GetPMI"
                    }
                ]
            },
            "Type": "AWS::Events::Rule"
        },
        "LambdaInvokePermission": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName" : { "Fn::GetAtt" : ["GetPMI", "Arn"] },
            "Action": "lambda:InvokeFunction",
            "Principal": "events.amazonaws.com",
            "SourceArn" : { "Fn::GetAtt" : ["ScheduledEvent", "Arn"] }
          }
        },
        "GetPMI": {
            "Properties": {
                "Code": {
                    "S3Bucket": {"Ref": "BucketName"},
                    "S3Key": {"Ref": "FileName"}

                },
                "Handler": "lambda_function.lambda_handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaServiceExecutionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": 300,
                "Environment": {
                  "Variables": {
                    "SNS": { "Ref": "MySNSTopic"}
                  }
                }
            },
            "Type": "AWS::Lambda::Function"
        },
        "MySNSTopic" : {
          "Type" : "AWS::SNS::Topic",
          "Properties" : {
              "Subscription" : [ {
                  "Endpoint" : {"Ref": "Email"},
                  "Protocol" : "email"
              } ]
          }
        }
  }
}